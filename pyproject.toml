[build-system]
requires = [
    "setuptools>=80",
    "setuptools_scm>=8",
]
build-backend = "setuptools.build_meta"

[project]
dynamic = [
    "readme",
    "version",
]
name = "hunter"
license = "BSD-2-Clause"
license-files = ["LICENSE"]
description = "Hunter is a flexible code tracing toolkit."
authors = [
    { name = "Ionel Cristian Mărieș", email = "contact@ionelmc.ro" },
]
classifiers = [
    # complete classifier list: http://pypi.python.org/pypi?%3Aaction=list_classifiers
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Operating System :: Unix",
    "Operating System :: POSIX",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Utilities",
    "Topic :: Software Development :: Debuggers",
]
keywords = [
    "trace",
    "tracer",
    "settrace",
    "debugger",
    "debugging",
    "code",
    "source",
]
requires-python = ">=3.9"
dependencies = [
    "manhole>=1.5; platform_system!='Windows'",
]

[project.optional-dependencies]
# rst = ["docutils>=0.11"]

[project.scripts]
hunter-trace = "hunter.remote:main"

[project.urls]
"Sources" = "https://github.com/ionelmc/python-hunter"
"Documentation" = "https://python-hunter.readthedocs.io/"
"Changelog" = "https://python-hunter.readthedocs.io/en/latest/changelog.html"
"Issue Tracker" = "https://github.com/ionelmc/python-hunter/issues"

[tool.setuptools_scm]
local_scheme = "dirty-tag"
write_to = "src/hunter/_version.py"
fallback_version = "3.9.0"

[tool.ruff]
extend-exclude = ["static", "ci/templates"]
line-length = 140
src = ["src", "tests"]
target-version = "py39"

[tool.cython-lint]
max-line-length = 140

[tool.ruff.lint.per-file-ignores]
"ci/*" = ["S"]
"tests/*" = ["ALL"]

[tool.ruff.lint]
ignore = [
    "RUF001",  # ruff-specific rules ambiguous-unicode-character-string
    "S101",    # flake8-bandit assert
    "S307",
    "S308",    # flake8-bandit suspicious-mark-safe-usage
    "E501",    # pycodestyle line-too-long
    "PLC0415", # import-outside-top-level
]
select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "E",   # pycodestyle errors
    "EXE", # flake8-executable
    "F",   # pyflakes
    "I",   # isort
    "INT", # flake8-gettext
    "PIE", # flake8-pie
    "PLC", # pylint convention
    "PLE", # pylint errors
    "PT",  # flake8-pytest-style
    "RSE", # flake8-raise
    "RUF", # ruff-specific rules
    "S",   # flake8-bandit
    "UP",  # pyupgrade
    "W",   # pycodestyle warnings
]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.isort]
extra-standard-library = ["opcode"]
forced-separate = ["conftest"]
force-single-line = true

[tool.ruff.format]
quote-style = "single"
